"use strict";function error(a){return logger(a.message)}function writeMetadata(a,b,c){a.indexes(function(d,e){return null!==d?(error(d),c()):(fs.writeFileSync(b+a.collectionName,JSON.stringify(e),{encoding:"utf8"}),void c())})}function makeDir(a,b){fs.stat(a,function(c,d){null!==c&&"ENOENT"===c.code?(logger("make dir at "+a),fs.mkdir(a,b(null,a))):void 0!==d&&d.isDirectory()===!1?(logger("make dir at "+a),fs.unlink(a,function(){fs.mkdir(a,b(error(new Error("path was a file")),a))})):b(null,a)})}function rmDir(a,b){fs.readdirSync(a).forEach(function(c){var d=a+c;if(fs.statSync(d).isDirectory()!==!1){var e="",f=fs.readdirSync(d);fs.existsSync(d+"/.metadata")===!0&&(e=d+"/.metadata/",delete f[f.indexOf(".metadata")]),f.forEach(function(a){var c=d+"/"+a;fs.statSync(c).isDirectory()!==!1&&(fs.readdirSync(c).forEach(function(a){var d=c+"/"+a;void 0!==b&&b(null,d),fs.unlinkSync(d)}),""!==e&&fs.unlinkSync(e+a),fs.rmdirSync(c))}),""!==e&&fs.rmdirSync(e),fs.rmdirSync(d)}})}function toJson(a,b,c){var d=a.length-1;return 0>d?c(null):void a.forEach(function(a,e){return fs.writeFileSync(b+a._id+".json",JSON.stringify(a),{encoding:"utf8"}),d===e?c(null):null})}function toBson(a,b,c){var d=a.length-1;return 0>d?c(null):void a.forEach(function(a,e){return fs.writeFileSync(b+a._id+".bson",BSON.serialize(a),{encoding:null}),d===e?c(null):null})}function allCollections(a,b,c,d,e,f){a.collections(function(a,g){if(null!==a)return error(a);var h=g.length-1;return 0>h?f(null):void g.forEach(function(a,g){return/^system./.test(a.collectionName)===!0?h===g?f(null):null:(logger("select collection "+a.collectionName),void makeDir(b+a.collectionName+"/",function(b,i){meta(a,d,function(){a.find(c).toArray(function(a,b){return null!==a?h===g?f(a):error(a):void e(b,i,function(a){return null!==a?h===g?f(a):error(a):h===g?f(null):null})})})}))})})}function someCollections(a,b,c,d,e,f,g){var h=g.length-1;return 0>h?f(null):void g.forEach(function(g,i){a.collection(g,function(a,g){return logger("select collection "+g.collectionName),null!==a?error(a):void makeDir(b+g.collectionName+"/",function(a,b){meta(g,d,function(){g.find(c).toArray(function(a,c){return null!==a?h===i?f(a):error(a):void e(c,b,function(a){return null!==a?h===i?f(a):error(a):h===i?f(null):null})})})})})})}function wrapper(a){function b(){logger("backup stop"),null!==a.callback&&(logger("callback run"),a.callback())}var c;switch(a.parser){case"bson":BSON=mongo.pure().BSON,c=toBson;break;case"json":c=toJson;break;default:throw new Error("missing parser option")}var d=allCollections;null!==a.collections&&(d=someCollections),null===a.logger?logger=function(){}:(logger=require("logger-request")({filename:a.logger,standalone:!0,winston:{logger:"_mongo_b",level:"info"}}))("backup start");var e="";meta=a.metadata===!0?writeMetadata:function(a,b,c){return c()},client.connect(a.uri,function(f,g){if(logger("db open"),null!==f)return error(f);var h=null===a.tar?a.root:a.dir;makeDir(h,function(f,i){makeDir(i+g.databaseName+"/",function(f,i){var j=function(){d(g,i,a.query,e,c,function(){return logger("db close"),g.close(),null!==a.tar?makeDir(a.root,function(c,d){logger("make tar file at "+d+a.tar);var e=fs.createWriteStream(d+a.tar),f=require("tar").Pack().on("error",error).on("end",function(){rmDir(h),b()});require("fstream").Reader({path:h+g.databaseName,type:"Directory"}).on("error",error).pipe(f).pipe(e)}):void b()},a.collections)};a.metadata===!1?j():(e=i+".metadata/",makeDir(e,function(){j()}))})})})}function backup(a){var b=a||Object.create(null);if(!b.uri)throw new Error("missing uri option");if(!b.root)throw new Error("missing root option");var c={dir:__dirname+"/dump/",uri:String(b.uri),root:resolve(String(b.root))+"/",parser:String(b.parser||"bson"),collections:Array.isArray(b.collections)?b.collections:null,callback:"function"==typeof b.callback?b.callback:null,tar:"string"==typeof b.tar?b.tar:null,query:"object"==typeof b.query?b.query:{},logger:"string"==typeof b.logger?resolve(b.logger):null,metadata:Boolean(b.metadata)};return wrapper(c)}try{var fs=require("fs"),resolve=require("path").resolve,mongo=require("mongodb"),client=mongo.MongoClient,BSON,logger,meta}catch(MODULE_NOT_FOUND){console.error(MODULE_NOT_FOUND),process.exit(1)}module.exports=backup;
